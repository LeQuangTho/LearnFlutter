const STATUS_100_CONTINUE = 100;
const STATUS_101_SWITCHING_PROTOCOLS = 101;
const STATUS_102_PROCESSING = 102;

const STATUS_200_OK = 200;
const STATUS_201_CREATED = 201;
const STATUS_202_ACCEPTED = 202;
const STATUS_203_NON_AUTHORITATIVE = 203;
const STATUS_204_NO_CONTENT = 204;
const STATUS_205_RESET_CONTENT = 205;
const STATUS_206_PARTIAL_CONTENT = 206;
const STATUS_207_MULTI_STATUS = 207;
const STATUS_208_ALREADY_REPORTED = 208;
const STATUS_226_IM_USED = 226;

const STATUS_300_MULTIPLE_CHOICES = 300;
const STATUS_301_MOVED_PERMANENTLY = 301;
const STATUS_302_FOUND = 302;
const STATUS_303_SEE_OTHER = 303;
const STATUS_304_NOT_MODIFIED = 304;
const STATUS_305_USE_PROXY = 305;
const STATUS_306_SWITCH_PROXY = 306; // RFC 2616, REMOVED
const STATUS_307_TEMPORARY_REDIRECT = 307;
const STATUS_308_PERMANENT_REDIRECT = 308;

const STATUS_400_BAD_REQUEST = 400;
const STATUS_401_UNAUTHORIZED = 401;
const STATUS_402_PAYMENT_REQUIRED = 402;
const STATUS_403_FOR_BIDDEN = 403;
const STATUS_404_NOT_FOUND = 404;
const STATUS_405_METHOD_NOT_ALLOWED = 405;
const STATUS_406_NOT_ACCEPTABLE = 406;
const STATUS_407_PROXY_AUTHENTICATION_REQUIRED = 407;
const STATUS_408_REQUEST_TIMEOUT = 408;
const STATUS_409_CONFLICT = 409;
const STATUS_410_GONE = 410;
const STATUS_411_LENGTH_REQUIRED = 411;
const STATUS_412_PRECONDITION_FAILED = 412;
const STATUS_413_REQUEST_ENTITY_TOO_LARGE = 413; // RFC 2616, RENAMED
const STATUS_413_PAYLOAD_TOO_LARGE = 413; // RFC 7231
const STATUS_414_REQUEST_URI_TOO_LONG = 414; // RFC 2616, RENAMED
const STATUS_414_URI_TOO_LONG = 414; // RFC 7231
const STATUS_415_UNSUPPORTED_MEDIA_TYPE = 415;
const STATUS_416_REQUESTED_RANGE_NOT_SATISFIABLE = 416; // RFC 2616, RENAMED
const STATUS_416_RANGE_NOT_SATISFIABLE = 416; // RFC 7233
const STATUS_417_EXPECTATION_FAILED = 417;
const STATUS_418_IMA_TEAPOT = 418;
const STATUS_419_AUTHENTICATION_TIMEOUT = 419; // NOT DEFINED IN ANY RFC
const STATUS_421_MIS_DIRECTED_REQUEST = 421;
const STATUS_422_UNPROCESSABLE_ENTITY = 422;
const STATUS_423_LOCKED = 423;
const STATUS_424_FAILED_DEPENDENCY = 424;
const STATUS_426_UPGRADE_REQUIRED = 426;
const STATUS_428_PRE_CONDITION_REQUIRED = 428;
const STATUS_429_TOO_MANY_REQUESTS = 429;
const STATUS_431_REQUEST_HEADER_FIELDS_TOO_LARGE = 431;
const STATUS_451_UNAVAILABLE_FOR_LEGAL_REASONS = 451;

const STATUS_500_INTERNAL_SERVER_ERROR = 500;
const STATUS_501_NOT_IMPLEMENTED = 501;
const STATUS_502_BAD_GATEWAY = 502;
const STATUS_503_SERVICE_UNAVAILABLE = 503;
const STATUS_504_GATEWAY_TIMEOUT = 504;
const STATUS_505_HTTP_VERSION_NOT_SUPPORTED = 505;
const STATUS_506_VARIANT_ALSO_NEGOTIATES = 506;
const STATUS_507_INSUFFICIENT_STORAGE = 507;
const STATUS_508_LOOP_DETECTED = 508;
const STATUS_510_NOT_EXTENDED = 510;
const STATUS_511_NETWORK_AUTHENTICATION_REQUIRED = 511;

// Cloudflare Statuses
const STATUS_520_WEB_SERVER_RETURNED_UNKNOWN_ERROR = 520;
const STATUS_521_WEB_SERVER_IS_DOWN = 521;
const STATUS_522_CONNECTION_TIMED_OUT = 522;
const STATUS_523_ORIGIN_IS_UNREACHABLE = 523;
const STATUS_524_TIMEOUT_OCCURRED = 524;
const STATUS_525_SSL_HAND_SHAKE_FAILED = 525;
const STATUS_526_INVALID_SSL_CERTIFICATE = 526;
const STATUS_527_RAILGUN_ERROR = 527;

// Not in RFC:
const STATUS_598_NETWORK_READ_TIME_OUT_ERROR = 598;
const STATUS_599_NETWORK_CONNECT_TIMEOUT_ERROR = 599;

/// From IIS
const STATUS_440_LOGIN_TIMEOUT = 440;

/// From ngnix
const STATUS_499_CLIENT_CLOSED_REQUEST = 499;

/// From AWS Elastic Load Balancer
const STATUS_460_CLIENT_CLOSED_REQUEST = 460;

const defaultRetryableStatuses = <int>{
  STATUS_408_REQUEST_TIMEOUT,
  STATUS_429_TOO_MANY_REQUESTS,
  STATUS_500_INTERNAL_SERVER_ERROR,
  STATUS_502_BAD_GATEWAY,
  STATUS_503_SERVICE_UNAVAILABLE,
  STATUS_504_GATEWAY_TIMEOUT,
  STATUS_440_LOGIN_TIMEOUT,
  STATUS_499_CLIENT_CLOSED_REQUEST,
  STATUS_460_CLIENT_CLOSED_REQUEST,
  STATUS_598_NETWORK_READ_TIME_OUT_ERROR,
  STATUS_599_NETWORK_CONNECT_TIMEOUT_ERROR,
  STATUS_520_WEB_SERVER_RETURNED_UNKNOWN_ERROR,
  STATUS_521_WEB_SERVER_IS_DOWN,
  STATUS_522_CONNECTION_TIMED_OUT,
  STATUS_523_ORIGIN_IS_UNREACHABLE,
  STATUS_524_TIMEOUT_OCCURRED,
  STATUS_525_SSL_HAND_SHAKE_FAILED,
  STATUS_527_RAILGUN_ERROR,
};

// For backward compatibility purpose
@Deprecated('Use [defaultRetryableStatuses]')
const retryableStatuses = defaultRetryableStatuses;

// For backward compatibility purpose
/// Be careful: this method do not
bool isRetryable(int statusCode) =>
    defaultRetryableStatuses.contains(statusCode);
