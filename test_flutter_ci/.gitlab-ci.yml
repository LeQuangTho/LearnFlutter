image: ghcr.io/cirruslabs/flutter:latest

stages:
#  - test
  - build
  - deploy

#flutter_test:
#  stage: test
#  script:
#    - flutter pub get
#    - flutter test

flutter_build:
  stage: build
  script:
    - echo ${GOOGLE_SERVICE_JSON} | base64 -d > google-services.json
    - flutter clean
    - flutter pub get
    - flutter build apk --release
#    - echo ${KEY_STORE_PROP} | base64 -d > key.properties
#    - echo ${KEYSTORE_FILE} | base64 -d > app/keystore.jks
#    - ./gradlew assembleRelease
  artifacts:
    expire_in: 7 days
    paths:
      - build/app/outputs/flutter-apk/app-release.apk
  only:
    - main

deploy_to_firebase:
  stage: deploy
  image: node:latest
  before_script:
    - export GRADLE_USER_HOME=$(pwd)/.gradle
    - export JAVA_HOME="/usr/bin/java"
    - apt-get update -y && apt-get install wget -y
  dependencies:
    - flutter_build
  only:
    - main
  script:
    - sed -n '/## Release Notes/,$p' README.md > release-notes.txt
    - npm install -g firebase-tools
    - if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then echo "true"; else echo "false"; fi
    - if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk --app $FIREBASE_APP_ID --release-notes-file release-notes.txt --groups "savis-test" --token "$FIREBASE_CI_TOKEN"; fi

#create_release_tag:
#  stage: deploy
#  dependencies:
#    - deploy_to_firebase
#  script:
#    - >
#      apk add --no-cache git &&
#      git config --global user.name "$CI_COMMIT_AUTHOR_NAME" &&
#      git config --global user.email "$CI_COMMIT_AUTHOR_EMAIL" &&
#      git tag "$(grep "version: " pubspec.yaml | awk '{print $2}')" &&
#      git push origin --tags
#  only:
#    - main

